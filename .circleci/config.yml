# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs: # a collection of steps
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:latest

    #working_directory: ~/repo
    
    branches:
      only: 
        - dev
        #- qa
        #- staging
        #- master

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      JVM_OPTS: -Xmx3200m
      WINWIN_DB_HOST: localhost
      WINWIN_DB_NAME: winwindb
      WINWIN_DB_USER: winwindbuser
      WINWIN_DB_PASSWORD: winwindbpassword
      WINWIN_DB_PORT: 5432

    steps: # a collection of executable commands
      - checkout # check out source code to working directory

      - run: chmod +x mvnw

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: sudo apt-get update -qq && sudo apt-get install -y postgresql
      - run: psql --port=$WINWIN_DB_PORT -c "CREATE DATABASE winwindb;"
      - run: psql --port=$WINWIN_DB_PORT -c "CREATE USER winwindbuser WITH ENCRYPTED PASSWORD 'winwindbpassword';"
      - run: psql --port=$WINWIN_DB_PORT -c "GRANT ALL PRIVILEGES ON DATABASE winwindb TO winwindbuser;"
      - run: sed -i 's/5432/'"$WINWIN_DB_PORT"'/g' ./src/main/resources/application.properties

      # build now
      #- run: mvn package # run the actual tests
      - run: mvn clean install # run the actual tests
      #- run: mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the jar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/winwin-0.0.1-SNAPSHOT.jar